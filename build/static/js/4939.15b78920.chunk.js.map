{"version":3,"file":"static/js/4939.15b78920.chunk.js","mappings":"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","sources":["components/TopbarSearch.tsx","components/MaximizeScreen.tsx","components/NotificationDropdown.tsx","components/ProfileDropdown.tsx","layouts/Topbar.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport Avatar2 from \"../assets/images/users/user-2.jpg\";\nimport Avatar5 from \"../assets/images/users/user-5.jpg\";\n\ninterface SearchResultItem {\n  id: number;\n  title: string;\n  redirectTo: string;\n  icon: string;\n}\n\ninterface TopbarSearchProps {\n  items: Array<SearchResultItem>;\n}\n\nconst TopbarSearch = (props: TopbarSearchProps) => {\n  const showSearchOptions = () => {\n    document.getElementById(\"search-dropdown\")!.classList.add(\"d-block\");\n  };\n\n  const hideSearchOptions = () => {\n    document.getElementById(\"search-dropdown\")!.classList.remove(\"d-block\");\n  };\n\n  return (\n    <>\n      <form>\n        <input\n          type=\"search\"\n          className=\"form-control rounded-pill\"\n          placeholder=\"Search...\"\n          id=\"top-search\"\n          onFocus={showSearchOptions}\n          onBlur={hideSearchOptions}\n        />\n        <span className=\"mdi mdi-magnify search-icon font-22\"></span>\n      </form>\n\n      <div\n        className=\"dropdown-menu dropdown-menu-animated dropdown-lg\"\n        id=\"search-dropdown\"\n      >\n        <div className=\"dropdown-header noti-title\">\n          <h5 className=\"text-overflow mb-2\">Found 22 results</h5>\n        </div>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-home me-1\"></i>\n          <span>Analytics Report</span>\n        </Link>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-aperture me-1\"></i>\n          <span>How can I help you?</span>\n        </Link>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-settings me-1\"></i>\n          <span>User profile settings</span>\n        </Link>\n\n        <div className=\"dropdown-header noti-title\">\n          <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n        </div>\n\n        <div className=\"notification-list\">\n          <Link to=\"#\" className=\"dropdown-item notify-item\">\n            <div className=\"d-flex align-items-start\">\n              <img\n                className=\"d-flex me-2 rounded-circle\"\n                src={Avatar2}\n                alt=\"Generic placeholder\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"m-0 font-14\">Erwin E. Brown</h5>\n                <span className=\"font-12 mb-0\">UI Designer</span>\n              </div>\n            </div>\n          </Link>\n\n          <Link to=\"#\" className=\"dropdown-item notify-item\">\n            <div className=\"d-flex align-items-start\">\n              <img\n                className=\"d-flex me-2 rounded-circle\"\n                src={Avatar5}\n                alt=\"Generic placeholder\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"m-0 font-14\">Jacob Deo</h5>\n                <span className=\"font-12 mb-0\">Developer</span>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n\n      {/* <Select\n        {...props}\n        components={{ IndicatorsContainer, MenuList }}\n        placeholder={'Search...'}\n        options={formateOptions(options)}\n        formatOptionLabel={handleFormatOptionLabel}\n        isOptionDisabled={(option) => option.type === 'title'}\n        maxMenuHeight={350}\n        handleClick={onClick}\n        isSearchable\n        isClearable\n        name=\"search-app\"\n        className=\"app-search dropdown\"\n        classNamePrefix=\"react-select\"\n      /> */}\n    </>\n  );\n};\n\nexport default TopbarSearch;\n","import React, { useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst MaximizeScreen = () => {\n  useEffect(() => {\n    let elem = document.querySelector(\".maximize-icon\");\n\n    if (elem) elem.setAttribute(\"data-toggle\", \"fullscreen\");\n\n    return () => {\n      if (elem) elem.removeAttribute(\"data-toggle\");\n    };\n  }, []);\n\n  /*\n   * toggle full screen mode\n   */\n  const toggleFullscreen = () => {\n    let document: any = window.document;\n    document.body.classList.add(\"fullscreen-enable\");\n\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen();\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n    }\n\n    // handle fullscreen exit\n    const exitHandler = () => {\n      if (\n        !document.webkitIsFullScreen &&\n        !document.mozFullScreen &&\n        !document.msFullscreenElement\n      )\n        document.body.classList.remove(\"fullscreen-enable\");\n    };\n    document.addEventListener(\"fullscreenchange\", exitHandler);\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\n  };\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle\n        id=\"dropdown-languages\"\n        as=\"a\"\n        onClick={toggleFullscreen}\n        className=\"nav-link waves-effect waves-light maximize-icon\"\n      >\n        <i className=\"fe-maximize noti-icon font-22\"></i>\n      </Dropdown.Toggle>\n    </Dropdown>\n  );\n};\n\nexport default MaximizeScreen;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport classNames from \"classnames\";\n\n//interface\nimport { NotificationItem } from \"../layouts/Topbar\";\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n  maxHeight: \"300px\",\n  display: \"none\",\n};\n\nconst notificationShowContainerStyle = {\n  maxHeight: \"300px\",\n};\n\ninterface NotificationDropdownProps {\n  notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n  maxHeight?: string;\n  display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n  const [notificationContentStyle, setNotificationContentStyles] = useState<NotificationContainerStyle>(notificationContainerStyle);\n  let notifications = props.notifications\n\n  /*\n   * toggle notification-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(\n      notificationContentStyle === notificationContainerStyle\n        ? notificationShowContainerStyle\n        : notificationContainerStyle\n    );\n  };\n\n  const handleClearNotification = (index: number) => {\n    notifications.splice(index, 1);\n  }\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-notification\"\n        role=\"button\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light arrow-none notification-list\", { show: dropdownOpen, })}\n      >\n        <i className=\"fe-bell noti-icon font-22\"></i>\n        <span className=\"badge bg-danger rounded-circle noti-icon-badge\">\n          9\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end dropdown-menu-animated dropdown-lg py-0\">\n        <div onClick={toggleDropdown}>\n          <div className=\"p-2 border-top-0 border-start-0 border-end-0 border-dashed border\">\n            <div className=\"row align-items-center\">\n              <div className=\"col\">\n                <h6 className=\"m-0 font-16 fw-semibold\">Notification</h6>\n              </div>\n              <div className=\"col-auto\">\n                <Link to=\"#\" className=\"text-dark text-decoration-underline\">\n                  <small>Clear All</small>\n                </Link>\n              </div>\n            </div>\n          </div>\n          <SimpleBar className=\"px-1\" style={notificationContentStyle}>\n            <h5 className=\"text-muted font-13 fw-normal mt-2\">Today</h5>\n            {(notifications || []).map((item, i) => {\n              return (\n                <Link to=\"#\" className=\"dropdown-item p-0 notify-item card unread-noti shadow-none mb-1\" key={i + \"-noti\"}                >\n                  {item.avatar ? (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\"></i>\n                      </span>\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"notify-icon\">\n                            <img\n                              src={item.avatar}\n                              alt=\"\"\n                              className=\"img-fluid rounded-circle\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1 text-truncate ms-2\">\n                          <h5 className=\"noti-item-title fw-semibold font-14\">\n                            {item.text}\n                            <small className=\"fw-normal text-muted ms-1\">\n                              {item.text}\n                            </small>\n                          </h5>\n                          <small className=\"noti-item-subtitle text-muted\">\n                            {item.subText}\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\" />\n                      </span>\n                      <div className={`notify-icon bg-${item.bgColor}`}>\n                        <i className={item.icon}></i>\n                      </div>\n                      <p className=\"notify-details\">\n                        {item.text}\n                        <small className=\"noti-item-subtitle text-muted\">\n                          {item.subText}\n                        </small>\n                      </p>\n                    </div>\n                  )}\n                </Link>\n              );\n            })}\n          </SimpleBar>\n\n          <Link\n            to=\"#\"\n            className=\"dropdown-item text-center text-primary notify-item notify-all\"\n          >\n            View All <i className=\"fe-arrow-right\"></i>\n          </Link>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NotificationDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface ProfileMenuItem {\n  label: string;\n  icon: string;\n  redirectTo: string;\n}\n\ninterface ProfileDropdownProps {\n  menuItems: Array<ProfileMenuItem>;\n  profilePic?: string;\n  username: string;\n  userTitle?: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n  const profilePic = props[\"profilePic\"] || null;\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle profile-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-profile\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link nav-user me-0 waves-effect waves-light\",\n          { show: dropdownOpen }\n        )}\n      >\n        <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />\n        <span className=\"pro-user-name ms-1\">\n          {props[\"username\"]} <i className=\"mdi mdi-chevron-down\"></i>\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end profile-dropdown\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-header noti-title\">\n            <h6 className=\"text-overflow m-0\">Welcome !</h6>\n          </div>\n          {(props.menuItems || []).map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i === props[\"menuItems\"].length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={i + \"-profile-menu\"}\n                >\n                  <i className={`${item.icon} me-1`}></i>\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default ProfileDropdown;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import classNames from 'classnames';\n\n// actions\nimport { showRightSidebar, changeSidebarType } from \"../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../redux/store\";\n\n//constants\nimport { LayoutTypes, SideBarTypes } from \"../constants/layout\";\n\n// components\nimport TopbarSearch from \"../components/TopbarSearch\";\nimport MaximizeScreen from \"../components/MaximizeScreen\";\nimport AppsDropdown from \"../components/AppsDropdown/\";\n// import SearchDropdown from '../components/SearchDropdown';\nimport LanguageDropdown from \"../components/LanguageDropdown\";\nimport NotificationDropdown from \"../components/NotificationDropdown\";\nimport ProfileDropdown from \"../components/ProfileDropdown\";\nimport CreateNew from \"../components/CreateNew\";\nimport MegaMenu from \"../components/MegaMenu\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\nimport avatar4 from \"../assets/images/users/user-4.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoDark2 from \"../assets/images/logo-dark-2.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\nimport logoLight2 from \"../assets/images/logo-light-2.png\";\nimport { useViewport } from \"../hooks/useViewPort\";\n\nexport interface NotificationItem {\n  id: number;\n  text: string;\n  subText: string;\n  icon?: string;\n  avatar?: string;\n  bgColor?: string;\n}\n\n// get the notifications\nconst Notifications: NotificationItem[] = [\n  {\n    id: 1,\n    text: \"Cristina Pride\",\n    subText: \"Hi, How are you? What about our next meeting\",\n    avatar: profilePic,\n  },\n  {\n    id: 2,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"primary\",\n  },\n  {\n    id: 3,\n    text: \"Karen Robinson\",\n    subText: \"Wow ! this admin looks good and awesome design\",\n    avatar: avatar4,\n  },\n  {\n    id: 4,\n    text: \"New user registered.\",\n    subText: \"5 hours ago\",\n    icon: \"mdi mdi-account-plus\",\n    bgColor: \"warning\",\n  },\n  {\n    id: 5,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"info\",\n  },\n  {\n    id: 6,\n    text: \"Carlos Crouch liked Admin\",\n    subText: \"13 days ago\",\n    icon: \"mdi mdi-heart\",\n    bgColor: \"secondary\",\n  },\n];\n\n// get the profilemenu\nconst ProfileMenus = [\n  {\n    label: \"My Account\",\n    icon: \"fe-user\",\n    redirectTo: \"#\",\n  },\n  {\n    label: \"Settings\",\n    icon: \"fe-settings\",\n    redirectTo: \"#\",\n  },\n  {\n    label: \"Lock Screen\",\n    icon: \"fe-lock\",\n    redirectTo: \"/auth/lock-screen\",\n  },\n  {\n    label: \"Logout\",\n    icon: \"fe-log-out\",\n    redirectTo: \"/auth/logout\",\n  },\n];\n\n// dummy search results\nconst SearchResults = [\n  {\n    id: 1,\n    title: \"Analytics Report\",\n    icon: \"uil-notes\",\n    redirectTo: \"#\",\n  },\n  {\n    id: 2,\n    title: \"How can I help you?\",\n    icon: \"uil-life-ring\",\n    redirectTo: \"#\",\n  },\n  {\n    id: 3,\n    icon: \"uil-cog\",\n    title: \"User profile settings\",\n    redirectTo: \"#\",\n  },\n];\n\nconst otherOptions = [\n  {\n    id: 1,\n    label: \"New Projects\",\n    icon: \"fe-briefcase\",\n  },\n  {\n    id: 2,\n    label: \"Create Users\",\n    icon: \"fe-user\",\n  },\n  {\n    id: 3,\n    label: \"Revenue Report\",\n    icon: \"fe-bar-chart-line-\",\n  },\n  {\n    id: 4,\n    label: \"Settings\",\n    icon: \"fe-settings\",\n  },\n  {\n    id: 4,\n    label: \"Help & Support\",\n    icon: \"fe-headphones\",\n  },\n];\n\n// get mega-menu options\nconst MegaMenuOptions = [\n  {\n    id: 1,\n    title: \"UI Components\",\n    menuItems: [\n      \"Widgets\",\n      \"Nestable List\",\n      \"Range Sliders\",\n      \"Masonry Items\",\n      \"Sweet Alerts\",\n      \"Treeview Page\",\n      \"Tour Page\",\n    ],\n  },\n  {\n    id: 2,\n    title: \"Applications\",\n    menuItems: [\n      \"eCommerce Pages\",\n      \"CRM Pages\",\n      \"Email\",\n      \"Calendar\",\n      \"Team Contacts\",\n      \"Task Board\",\n      \"Email Templates\",\n    ],\n  },\n  {\n    id: 3,\n    title: \"Extra Pages\",\n    menuItems: [\n      \"Left Sidebar with User\",\n      \"Menu Collapsed\",\n      \"Small Left Sidebar\",\n      \"New Header Style\",\n      \"Search Result\",\n      \"Gallery Pages\",\n      \"Maintenance & Coming Soon\",\n    ],\n  },\n];\n\ninterface TopbarProps {\n  hideLogo?: boolean;\n  navCssClasses?: string;\n  openLeftMenuCallBack?: () => void;\n  topbarDark?: boolean;\n}\n\nconst Topbar = ({\n  hideLogo,\n  navCssClasses,\n  openLeftMenuCallBack,\n  topbarDark,\n}: TopbarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { width } = useViewport();\n\n  const navbarCssClasses: string = navCssClasses || \"\";\n  const containerCssClasses: string = !hideLogo ? \"container-fluid\" : \"\";\n\n  const { layoutType, leftSideBarType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n\n  /**\n   * Toggle the leftmenu when having mobile screen\n   */\n  const handleLeftMenuCallBack = () => {\n    if (width < 1140) {\n      if (leftSideBarType === 'full') {\n        showLeftSideBarBackdrop();\n        document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n      }\n      else {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      }\n    } else if (leftSideBarType === \"condensed\") {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    } else if (leftSideBarType === 'full') {\n      showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    } else if (leftSideBarType === 'fullscreen') {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n      // showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    }\n    else {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n    }\n  };\n\n  // create backdrop for leftsidebar\n  function showLeftSideBarBackdrop() {\n    const backdrop = document.createElement(\"div\");\n    backdrop.id = \"custom-backdrop\";\n    backdrop.className = \"offcanvas-backdrop fade show\";\n    // backdrop.style.zIndex = '999'\n    document.body.appendChild(backdrop);\n\n    if (\n      document.getElementsByTagName(\"html\")[0]?.getAttribute(\"dir\") !== \"rtl\"\n    ) {\n      document.body.style.overflow = \"hidden\";\n      if (width > 1140) {\n        document.body.style.paddingRight = \"15px\";\n      }\n    }\n\n    backdrop.addEventListener(\"click\", function (e) {\n      document.getElementsByTagName(\"html\")[0].classList.remove(\"sidebar-enable\");\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      hideLeftSideBarBackdrop();\n    });\n  }\n\n  function hideLeftSideBarBackdrop() {\n    var backdrop = document.getElementById(\"custom-backdrop\");\n    if (backdrop) {\n      document.body.removeChild(backdrop);\n      document.body.style.overflow = \"visible\";\n    }\n  }\n\n  /**\n   * Toggles the right sidebar\n   */\n  const handleRightSideBar = () => {\n    dispatch(showRightSidebar());\n  };\n\n  /**\n   * Toggles the left sidebar width\n   */\n  // const toggleLeftSidebarWidth = () => {\n  //   if (leftSideBarType === 'default' || leftSideBarType === 'compact')\n  //     dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n  //   if (leftSideBarType === 'condensed') dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n  // };\n\n  return (\n    <React.Fragment>\n      <div className={`navbar-custom ${navbarCssClasses}`}>\n        <div className={`topbar ${containerCssClasses}`}>\n          <div className=\"topbar-menu d-flex align-items-center gap-1\">\n            {!hideLogo && (\n              <div className=\"logo-box\">\n                <Link to=\"/\" className=\"logo logo-dark text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoDark2\n                          : logoDark\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n                <Link to=\"/\" className=\"logo logo-light text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoLight2\n                          : logoLight\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n              </div>\n            )}\n\n            <button\n              className=\"button-toggle-menu\"\n              onClick={handleLeftMenuCallBack}\n            >\n              <i className=\"mdi mdi-menu\" />\n            </button>\n{/* \n            <div className=\"dropdown d-none d-xl-block\">\n              <CreateNew otherOptions={otherOptions} />\n            </div>\n\n            <div className=\"dropdown dropdown-mega d-none d-xl-block\">\n              <MegaMenu subMenus={MegaMenuOptions} />\n            </div> */}\n          </div>\n\n          <ul className=\"topbar-menu d-flex align-items-center\">\n            <li className=\"app-search dropdown d-none d-lg-block\">\n              <TopbarSearch items={SearchResults} />\n            </li>\n            {/* <li className=\"dropdown d-inline-block d-lg-none\">\n              <SearchDropdown />\n            </li> */}\n            <li className=\"dropdown d-none d-lg-inline-block\">\n              <MaximizeScreen />\n            </li>\n            {/* <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <AppsDropdown />\n            </li> */}\n            {/* <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <LanguageDropdown />\n            </li> */}\n            <li className=\"dropdown notification-list\">\n              <NotificationDropdown notifications={Notifications} />\n            </li>\n            <li className=\"dropdown\">\n              <ProfileDropdown\n                profilePic={profilePic}\n                menuItems={ProfileMenus}\n                username={\"Geneva\"}\n                userTitle={\"Founder\"}\n              />\n            </li>\n            {/* <li>\n              <button\n                className=\"nav-link dropdown-toggle right-bar-toggle waves-effect waves-light btn btn-link shadow-none\"\n                onClick={handleRightSideBar}\n              >\n                <i className=\"fe-settings noti-icon font-22\"></i>\n              </button>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Topbar;\n"],"names":["props","_jsxs","_Fragment","children","_jsx","type","className","placeholder","id","onFocus","document","getElementById","classList","add","onBlur","remove","Link","to","src","Avatar2","alt","height","Avatar5","useEffect","elem","querySelector","setAttribute","removeAttribute","Dropdown","as","onClick","window","body","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitHandler","webkitIsFullScreen","mozFullScreen","msFullscreenElement","addEventListener","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","_useState3","_useState4","notificationContentStyle","setNotificationContentStyles","notifications","toggleDropdown","handleClearNotification","index","splice","show","onToggle","role","classNames","SimpleBar","style","map","item","i","avatar","text","subText","concat","bgColor","icon","profilePic","menuItems","React","length","redirectTo","label","Notifications","avatar4","ProfileMenus","SearchResults","title","_ref","hideLogo","navCssClasses","dispatch","openLeftMenuCallBack","topbarDark","useDispatch","width","useViewport","navbarCssClasses","containerCssClasses","_useSelector","useSelector","state","layoutType","Layout","leftSideBarType","showLeftSideBarBackdrop","_document$getElements","backdrop","createElement","appendChild","getElementsByTagName","getAttribute","overflow","paddingRight","e","changeSidebarType","SideBarTypes","removeChild","hideLeftSideBarBackdrop","logoSm","LayoutTypes","logoDark2","logoDark","logoLight2","logoLight","TopbarSearch","items","MaximizeScreen","NotificationDropdown","ProfileDropdown","username","userTitle"],"sourceRoot":""}